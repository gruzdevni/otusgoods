// Code generated by go-swagger; DO NOT EDIT.

package warehouse

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetCheckReserveStatusOrderIDHandlerFunc turns a function with the right signature into a get check reserve status order ID handler
type GetCheckReserveStatusOrderIDHandlerFunc func(GetCheckReserveStatusOrderIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCheckReserveStatusOrderIDHandlerFunc) Handle(params GetCheckReserveStatusOrderIDParams) middleware.Responder {
	return fn(params)
}

// GetCheckReserveStatusOrderIDHandler interface for that can handle valid get check reserve status order ID params
type GetCheckReserveStatusOrderIDHandler interface {
	Handle(GetCheckReserveStatusOrderIDParams) middleware.Responder
}

// NewGetCheckReserveStatusOrderID creates a new http.Handler for the get check reserve status order ID operation
func NewGetCheckReserveStatusOrderID(ctx *middleware.Context, handler GetCheckReserveStatusOrderIDHandler) *GetCheckReserveStatusOrderID {
	return &GetCheckReserveStatusOrderID{Context: ctx, Handler: handler}
}

/*
	GetCheckReserveStatusOrderID swagger:route GET /check-reserve-status/{order-id} Warehouse getCheckReserveStatusOrderId

Проверка резервирования по заказу
*/
type GetCheckReserveStatusOrderID struct {
	Context *middleware.Context
	Handler GetCheckReserveStatusOrderIDHandler
}

func (o *GetCheckReserveStatusOrderID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetCheckReserveStatusOrderIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
